.large-hero {
    border-bottom: 10px solid $mainBlue;
    position: relative;

    &__image {
        display: block;
    }

    &__text-content {
        position: absolute;
        padding-top: 88px;
        top: 50%;
        transform: translateY(-50%);
        left: 0;
        width: 100%;
        text-align: center;

        @mixin atMedium {
            padding-top: 66px;
        }
    }

    &__title {
        font-weight: 300;
        color: $mainBlue;
        margin: 0;
        font-size: 2.4rem;

        @mixin atSmall {
            font-size: 4.8rem;
        }
    }
    
    &__subtitle {
        font-weight: 300;
        color: $mainBlue;
        font-size: 1.5rem;
        margin: 0;

        @mixin atSmall {
            font-size: 2.9rem;
        }
    }

    &__description {
        color: #fff;
        font-size: 1.1rem;
        font-weight: 100;
        text-shadow: 2px 2px 0 rgba(0, 0, 0, .1);
        max-width: 30rem;
        margin-left: auto;
        margin-right: auto;

        @mixin atSmall {
            font-size: 1.875rem;
        }
    }

}


/* Writing highly organized CSS */
/* type and decendant selectors */
/* .large-hero h1 {
    font-weight: 300;

} */
/* BEM */
/*
Block - an independent reusable part of our design
Element - belongs to a block, it cannot be used outside of the block that it belongs to
Modifier - change to the default state of an object

proper use 
-limiting casading and trickling of styling down of styles on the page and create a 1:1 relationship between
a block of html and its css
- we won't need to worry obout parent elements trickling their styles down to our blocks and hurting the 
predictability of our blocks styles 
- our blocks are independent, self contained so we are free to move them around and reuse them throughout the page
- blocks can be nested inside of other blocks
- the idea is to identify patterns in our design, and then create single-responsibility blocks that can be used 
together

single-responisiblity - patterns like columns
- there is no reason to code a pattern more than once
- use a block to create pattern layouts
- create column block and nest column blocks inside the columns

HTML SEMANTICS
- class names cannot be unsemantic
- content layer semantics are already served by HTML elements
- class name impart little or no useful semantic informantion to machines or human visitors
- the primary purpose of a class name is to be a hook for CSS and JavaSvript
- classnames should communicate useful information to developers
*/
